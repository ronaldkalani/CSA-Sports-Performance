name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Django Tests
    runs-on: ubuntu-latest

    services:  # Set up PostgreSQL as a service
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: csasports
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Match your project's Python version

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL to be ready..."
          sleep 1
        done

    - name: Run Migrations
      env:  # Set database environment variables
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/csasports
      run: |
        python backend/manage.py makemigrations
        python backend/manage.py migrate

    - name: Run Tests
      env:  # Use the same database connection for tests
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/csasports
      run: python backend/manage.py test

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'  # Only deploy from the main branch

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Deploy Application
      run: |
        # Replace this with actual deployment commands (e.g., SSH or cloud CLI)
        echo "Deploying to production server"
